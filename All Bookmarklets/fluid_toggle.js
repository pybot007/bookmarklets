javascript:document.writeln("<html>"),document.writeln("    <head>"),document.writeln("        <style>"),document.writeln("            .fluid-switch {"),document.writeln("  --active: 117, 162, 253;"),document.writeln("  display: block;"),document.writeln("  position: relative;"),document.writeln("  border-radius: 11px;"),document.writeln("  cursor: pointer;"),document.writeln("}"),document.writeln(".fluid-switch input {"),document.writeln("  -webkit-appearance: none;"),document.writeln("     -moz-appearance: none;"),document.writeln("          appearance: none;"),document.writeln("  border: 0;"),document.writeln("  display: block;"),document.writeln("  width: 44px;"),document.writeln("  padding: 0;"),document.writeln("  margin: 0;"),document.writeln("  height: 22px;"),document.writeln("  background-color: #fff;"),document.writeln("  box-shadow: 0px 1px 1px rgba(10, 19, 39, 0.1), 0px 4px 12px rgba(10, 19, 39, 0.03), 0px 4px 20px rgba(10, 19, 39, 0.04);"),document.writeln("  border-radius: inherit;"),document.writeln("}"),document.writeln(".fluid-switch input:checked + .knob {"),document.writeln("  --knob-x: 22px;"),document.writeln("  --knob-scale: 1;"),document.writeln("  box-shadow: 0px 4px 20px rgba(10, 19, 39, 0.1), 0px 4px 12px rgba(10, 19, 39, 0.1), 0px 1px 1px rgba(10, 19, 39, 0.15);"),document.writeln("}"),document.writeln(".fluid-switch input:not(:checked) + .knob + .fluid {"),document.writeln("  filter: grayscale(60%);"),document.writeln("  opacity: 0.3;"),document.writeln("}"),document.writeln(".fluid-switch .knob {"),document.writeln("  position: absolute;"),document.writeln("  left: 2px;"),document.writeln("  top: 2px;"),document.writeln("  z-index: 1;"),document.writeln("  width: 18px;"),document.writeln("  height: 18px;"),document.writeln("  border-radius: 50%;"),document.writeln("  background-color: #fff;"),document.writeln("  box-shadow: 0px 4px 20px rgba(10, 19, 39, 0.03), 0px 4px 12px rgba(10, 19, 39, 0.06), 0px 1px 1px rgba(10, 19, 39, 0.1);"),document.writeln("  transform: translateX(var(--knob-x, 0)) scale(var(--knob-scale, 0.88)) translateZ(0);"),document.writeln("  transition: box-shadow 0.4s, transform 0.65s cubic-bezier(0.44, 0.13, 0.11, 1.14);"),document.writeln("}"),document.writeln(".fluid-switch .fluid {"),document.writeln("  position: absolute;"),document.writeln("  top: 0;"),document.writeln("  right: 0;"),document.writeln("  left: 0;"),document.writeln("  bottom: 0;"),document.writeln("  border-radius: inherit;"),document.writeln("  overflow: hidden;"),document.writeln("  -webkit-mask-image: -webkit-radial-gradient(white, black);"),document.writeln("  transition: filter 0.5s, opacity 0.5s;"),document.writeln("}"),document.writeln(".fluid-switch .fluid canvas {"),document.writeln("  display: block;"),document.writeln("  width: 44px;"),document.writeln("  height: 30px;"),document.writeln("  position: absolute;"),document.writeln("  left: 0;"),document.writeln("  top: -3px;"),document.writeln('  filter: url("#goo");'),document.writeln("}"),document.writeln(""),document.writeln("html {"),document.writeln("  box-sizing: border-box;"),document.writeln("  -webkit-font-smoothing: antialiased;"),document.writeln("}"),document.writeln(""),document.writeln("* {"),document.writeln("  box-sizing: inherit;"),document.writeln("}"),document.writeln("*:before, *:after {"),document.writeln("  box-sizing: inherit;"),document.writeln("}"),document.writeln(""),document.writeln("body {"),document.writeln("  min-height: 100vh;"),document.writeln("  display: flex;"),document.writeln('  font-family: "Inter", Arial;'),document.writeln("  justify-content: center;"),document.writeln("  align-items: center;"),document.writeln("  background: #f4f5fa;"),document.writeln("}"),document.writeln("body .twitter {"),document.writeln("  position: fixed;"),document.writeln("  display: block;"),document.writeln("  right: 12px;"),document.writeln("  bottom: 12px;"),document.writeln("}"),document.writeln("body .twitter svg {"),document.writeln("  width: 32px;"),document.writeln("  height: 32px;"),document.writeln("  fill: #1da1f2;"),document.writeln("}"),document.writeln("        </style>"),document.writeln("    </head>"),document.writeln("    <body>"),document.writeln('        <label class="fluid-switch">'),document.writeln('            <input type="checkbox" />'),document.writeln('            <div class="knob"></div>'),document.writeln('            <div class="fluid">'),document.writeln("              <canvas></canvas>"),document.writeln("            </div>"),document.writeln("          </label>"),document.writeln("          "),document.writeln('          <svg width="0" height="0" xmlns="http://www.w3.org/2000/svg" version="1.1">'),document.writeln("            <defs>"),document.writeln('              <filter id="goo">'),document.writeln('                <feGaussianBlur in="SourceGraphic" stdDeviation="1" result="blur" />'),document.writeln('                <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 25 -7"/>'),document.writeln("              </filter>"),document.writeln("            </defs>"),document.writeln("          </svg>"),document.writeln("          "),document.writeln("          <!-- twitter -->"),document.writeln('          <a class="twitter" target="_top" href="https://twitter.com/aaroniker_me"><svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 72 72"><path d="M67.812 16.141a26.246 26.246 0 0 1-7.519 2.06 13.134 13.134 0 0 0 5.756-7.244 26.127 26.127 0 0 1-8.313 3.176A13.075 13.075 0 0 0 48.182 10c-7.229 0-13.092 5.861-13.092 13.093 0 1.026.118 2.021.338 2.981-10.885-.548-20.528-5.757-26.987-13.679a13.048 13.048 0 0 0-1.771 6.581c0 4.542 2.312 8.551 5.824 10.898a13.048 13.048 0 0 1-5.93-1.638c-.002.055-.002.11-.002.162 0 6.345 4.513 11.638 10.504 12.84a13.177 13.177 0 0 1-3.449.457c-.846 0-1.667-.078-2.465-.231 1.667 5.2 6.499 8.986 12.23 9.09a26.276 26.276 0 0 1-16.26 5.606A26.21 26.21 0 0 1 4 55.976a37.036 37.036 0 0 0 20.067 5.882c24.083 0 37.251-19.949 37.251-37.249 0-.566-.014-1.134-.039-1.694a26.597 26.597 0 0 0 6.533-6.774z"></path></svg></a>'),document.writeln("          <script>"),document.writeln("            class Fluid {"),document.writeln("  constructor(width, height, colorRGB, canvas) {"),document.writeln("    this.width = width;"),document.writeln("    this.height = height;"),document.writeln("    this.colorRGB = colorRGB;"),document.writeln("    this.canvas = canvas;"),document.writeln('    this.ctx = canvas.getContext("2d");'),document.writeln(""),document.writeln("    this.spacing = 20;"),document.writeln("    this.radius = 9;"),document.writeln("    this.perGroup = 100;"),document.writeln("    this.limit = this.radius * 0.66;"),document.writeln("    this.amountX = Math.round(this.width / this.spacing) + 1;"),document.writeln("    this.amountY = Math.round(this.height / this.spacing) + 1;"),document.writeln(""),document.writeln("    this.grid = [];"),document.writeln("    this.particles = [];"),document.writeln("    this.particlesAmount = 0;"),document.writeln("    this.textures = [];"),document.writeln(""),document.writeln("    this.gravityX = -0.5;"),document.writeln("    this.gravityY = 0;"),document.writeln(""),document.writeln("    this.play = false;"),document.writeln("  }"),document.writeln(""),document.writeln("  createMeta() {"),document.writeln('    this.metaCanvas = document.createElement("canvas");'),document.writeln('    this.metaCtx = this.metaCanvas.getContext("2d");'),document.writeln(""),document.writeln("    this.metaCanvas.width = this.width;"),document.writeln("    this.metaCanvas.height = this.height;"),document.writeln("  }"),document.writeln(""),document.writeln("  init() {"),document.writeln("    this.createMeta();"),document.writeln(""),document.writeln("    this.canvas.width = this.width;"),document.writeln("    this.canvas.height = this.height;"),document.writeln(""),document.writeln("    for ("),document.writeln("      var i = 0;"),document.writeln("      i < [this.perGroup, this.perGroup, this.perGroup].length;"),document.writeln("      i++"),document.writeln("    ) {"),document.writeln('      this.textures[i] = document.createElement("canvas");'),document.writeln("      this.textures[i].width = this.radius * 2;"),document.writeln("      this.textures[i].height = this.radius * 2;"),document.writeln('      var nctx = this.textures[i].getContext("2d");'),document.writeln(""),document.writeln("      var grad = nctx.createRadialGradient("),document.writeln("        this.radius,"),document.writeln("        this.radius,"),document.writeln("        1,"),document.writeln("        this.radius,"),document.writeln("        this.radius,"),document.writeln("        this.radius"),document.writeln("      );"),document.writeln(""),document.writeln('      grad.addColorStop(0, "rgba(" + this.colorRGB + ",1)");'),document.writeln('      grad.addColorStop(1, "rgba(" + this.colorRGB + ",0)");'),document.writeln("      nctx.fillStyle = grad;"),document.writeln("      nctx.beginPath();"),document.writeln("      nctx.arc(this.radius, this.radius, this.radius, 0, Math.PI * 2, true);"),document.writeln("      nctx.closePath();"),document.writeln("      nctx.fill();"),document.writeln("    }"),document.writeln(""),document.writeln("    for (var i = 0; i < this.amountX * this.amountY; i++) {"),document.writeln("      this.grid[i] = {"),document.writeln("        length: 0,"),document.writeln("        close: [],"),document.writeln("      };"),document.writeln("    }"),document.writeln(""),document.writeln("    for ("),document.writeln("      let i = 0;"),document.writeln("      i < [this.perGroup, this.perGroup, this.perGroup].length;"),document.writeln("      i++"),document.writeln("    ) {"),document.writeln("      for ("),document.writeln("        let k = 0;"),document.writeln("        k < [this.perGroup, this.perGroup, this.perGroup][i];"),document.writeln("        k++"),document.writeln("      ) {"),document.writeln("        this.particles.push("),document.writeln("          new Particle("),document.writeln("            i,"),document.writeln("            this.radius + Math.random() * (this.width - this.radius * 2),"),document.writeln("            this.radius + Math.random() * (this.height - this.radius * 2)"),document.writeln("          )"),document.writeln("        );"),document.writeln("      }"),document.writeln("    }"),document.writeln(""),document.writeln("    this.particlesAmount = this.particles.length;"),document.writeln(""),document.writeln("    this.play = true;"),document.writeln("    this.run();"),document.writeln("  }"),document.writeln(""),document.writeln("  run() {"),document.writeln("    this.metaCtx.clearRect(0, 0, this.width, this.height);"),document.writeln(""),document.writeln("    for (let i = 0, l = this.amountX * this.amountY; i < l; i++) {"),document.writeln("      this.grid[i].length = 0;"),document.writeln("    }"),document.writeln(""),document.writeln("    let amount = this.particlesAmount;"),document.writeln(""),document.writeln("    while (amount--) {"),document.writeln("      this.particles[amount].first(this);"),document.writeln("    }"),document.writeln(""),document.writeln("    amount = this.particlesAmount;"),document.writeln(""),document.writeln("    while (amount--) {"),document.writeln("      this.particles[amount].second(this);"),document.writeln("    }"),document.writeln(""),document.writeln("    const imageData = this.metaCtx.getImageData(0, 0, this.width, this.height);"),document.writeln("    let pix = imageData.data;"),document.writeln(""),document.writeln("    for (let i = 0, n = pix.length; i < n; i += 4) {"),document.writeln("      pix[i + 3] < this.threshold && (pix[i + 3] /= 6);"),document.writeln("    }"),document.writeln(""),document.writeln("    this.ctx.putImageData(imageData, 0, 0);"),document.writeln(""),document.writeln("    if (this.play) {"),document.writeln("      window.requestAnimationFrame(() => this.run());"),document.writeln("    }"),document.writeln("  }"),document.writeln("}"),document.writeln(""),document.writeln("class Particle {"),document.writeln("  constructor(type, x, y) {"),document.writeln("    this.type = type;"),document.writeln("    this.x = x;"),document.writeln("    this.y = y;"),document.writeln("    this.px = x;"),document.writeln("    this.py = y;"),document.writeln("    this.vx = 0;"),document.writeln("    this.vy = 0;"),document.writeln("  }"),document.writeln(""),document.writeln("  first(Fluid) {"),document.writeln("    const g ="),document.writeln("      Fluid.grid["),document.writeln("        Math.round(this.y / Fluid.spacing) * Fluid.amountX +"),document.writeln("          Math.round(this.x / Fluid.spacing)"),document.writeln("      ];"),document.writeln(""),document.writeln("    if (g) {"),document.writeln("      g.close[g.length++] = this;"),document.writeln("    }"),document.writeln(""),document.writeln("    this.vx = this.x - this.px;"),document.writeln("    this.vy = this.y - this.py;"),document.writeln(""),document.writeln("    this.vx += Fluid.gravityX;"),document.writeln("    this.vy += Fluid.gravityY;"),document.writeln("    this.px = this.x;"),document.writeln("    this.py = this.y;"),document.writeln("    this.x += this.vx;"),document.writeln("    this.y += this.vy;"),document.writeln("  }"),document.writeln(""),document.writeln("  second(Fluid) {"),document.writeln("    var force = 0;"),document.writeln("    var forceB = 0;"),document.writeln(""),document.writeln("    const cellX = Math.round(this.x / Fluid.spacing);"),document.writeln("    const cellY = Math.round(this.y / Fluid.spacing);"),document.writeln(""),document.writeln("    const close = [];"),document.writeln(""),document.writeln("    for (let x_off = -1; x_off < 2; x_off++) {"),document.writeln("      for (let y_off = -1; y_off < 2; y_off++) {"),document.writeln("        const cell ="),document.writeln("          Fluid.grid[(cellY + y_off) * Fluid.amountX + (cellX + x_off)];"),document.writeln("        if (cell && cell.length) {"),document.writeln("          for (let a = 0, l = cell.length; a < l; a++) {"),document.writeln("            const particle = cell.close[a];"),document.writeln("            if (particle != this) {"),document.writeln("              var dfx = particle.x - this.x;"),document.writeln("              var dfy = particle.y - this.y;"),document.writeln("              var distance = Math.sqrt(dfx * dfx + dfy * dfy);"),document.writeln("              if (distance < Fluid.spacing) {"),document.writeln("                var m = 1 - distance / Fluid.spacing;"),document.writeln("                force += Math.pow(m, 2);"),document.writeln("                forceB += Math.pow(m, 3) / 2;"),document.writeln("                particle.m = m;"),document.writeln("                particle.dfx = (dfx / distance) * m;"),document.writeln("                particle.dfy = (dfy / distance) * m;"),document.writeln("                close.push(particle);"),document.writeln("              }"),document.writeln("            }"),document.writeln("          }"),document.writeln("        }"),document.writeln("      }"),document.writeln("    }"),document.writeln(""),document.writeln("    force = (force - 3) * 0.5;"),document.writeln(""),document.writeln("    for (var i = 0, l = close.length; i < l; i++) {"),document.writeln("      var neighbor = close[i];"),document.writeln(""),document.writeln("      var press = force + forceB * neighbor.m;"),document.writeln("      if (this.type != neighbor.type) {"),document.writeln("        press *= 0.35;"),document.writeln("      }"),document.writeln(""),document.writeln("      var dx = neighbor.dfx * press * 0.5;"),document.writeln("      var dy = neighbor.dfy * press * 0.5;"),document.writeln(""),document.writeln("      neighbor.x += dx;"),document.writeln("      neighbor.y += dy;"),document.writeln("      this.x -= dx;"),document.writeln("      this.y -= dy;"),document.writeln("    }"),document.writeln(""),document.writeln("    if (this.x < Fluid.limit) {"),document.writeln("      this.x = Fluid.limit;"),document.writeln("    } else if (this.x > Fluid.width - Fluid.limit) {"),document.writeln("      this.x = Fluid.width - Fluid.limit;"),document.writeln("    }"),document.writeln(""),document.writeln("    if (this.y < Fluid.limit) {"),document.writeln("      this.y = Fluid.limit;"),document.writeln("    } else if (this.y > Fluid.height - Fluid.limit) {"),document.writeln("      this.y = Fluid.height - Fluid.limit;"),document.writeln("    }"),document.writeln(""),document.writeln("    this.draw(Fluid);"),document.writeln("  }"),document.writeln(""),document.writeln("  draw(Fluid) {"),document.writeln("    const size = Fluid.radius * 2;"),document.writeln(""),document.writeln("    Fluid.metaCtx.drawImage("),document.writeln("      Fluid.textures[this.type],"),document.writeln("      this.x - Fluid.radius,"),document.writeln("      this.y - Fluid.radius,"),document.writeln("      size,"),document.writeln("      size"),document.writeln("    );"),document.writeln("  }"),document.writeln("}"),document.writeln(""),document.writeln('document.querySelectorAll(".fluid-switch").forEach((label) => {'),document.writeln('  const input = label.querySelector("input");'),document.writeln(""),document.writeln("  const fluid = new Fluid("),document.writeln("    44 * 4,"),document.writeln("    30 * 4,"),document.writeln('    getComputedStyle(label).getPropertyValue("--active"),'),document.writeln('    label.querySelector("canvas")'),document.writeln("  );"),document.writeln(""),document.writeln("  fluid.init();"),document.writeln(""),document.writeln('  input.addEventListener("change", () => {'),document.writeln("    fluid.gravityX = input.checked ? 0.5 : -0.5;"),document.writeln("  });"),document.writeln("});"),document.writeln(""),document.writeln("          </script>"),document.writeln("        <!-- Code injected by live-server -->"),document.writeln("<script>"),document.writeln("// <![CDATA[  <-- For SVG support"),document.writeln("if ('WebSocket' in window) {"),document.writeln("(function () {"),document.writeln("function refreshCSS() {"),document.writeln('var sheets = [].slice.call(document.getElementsByTagName("link"));'),document.writeln('var head = document.getElementsByTagName("head")[0];'),document.writeln("for (var i = 0; i < sheets.length; ++i) {"),document.writeln("var elem = sheets[i];"),document.writeln("var parent = elem.parentElement || head;"),document.writeln("parent.removeChild(elem);"),document.writeln("var rel = elem.rel;"),document.writeln('if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {'),document.writeln("var url = elem.href.replace(/(&|\\?)_cacheOverride=\\d+/, '');"),document.writeln("elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());"),document.writeln("}"),document.writeln("parent.appendChild(elem);"),document.writeln("}"),document.writeln("}"),document.writeln("var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';"),document.writeln("var address = protocol + window.location.host + window.location.pathname + '/ws';"),document.writeln("var socket = new WebSocket(address);"),document.writeln("socket.onmessage = function (msg) {"),document.writeln("if (msg.data == 'reload') window.location.reload();"),document.writeln("else if (msg.data == 'refreshcss') refreshCSS();"),document.writeln("};"),document.writeln("if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {"),document.writeln("console.log('Live reload enabled.');"),document.writeln("sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);"),document.writeln("}"),document.writeln("})();"),document.writeln("}"),document.writeln("else {"),document.writeln("console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');"),document.writeln("}"),document.writeln("// ]]>"),document.writeln("</script>"),document.writeln("</body>"),document.writeln("</html>");

//someone help me add html instead of replacing the html
